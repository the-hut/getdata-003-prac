source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
id <- sprintf("%03d", 291:290
)
ext <- ".csv"
fileList <- paste("specdata", "/", id, ext, sep = "")
dataset <- do.call("rbind",lapply(fileList,read.csv))
dataset
class(dataset)
DT <- data.table(dataset)
DT
DT[, length(nitrate, by=ID)]
DT[, length(nitrate), by=ID]
DT[complete.cases(DT), length(nitrate), by=ID]
DT[complete.cases(DT), length(nitrate), by=ID, all]
DT[complete.cases(DT), length(nitrate), keyby=ID]
DT[!is.na(nitrate), length(nitrate), keyby=ID]
DT[!is.na(nitrate), length(nitrate), by=ID]
?below
?head
?data.table
DT[!is.na(nitrate), list(total=.N), by=ID]
DT[, list(total=.N), by=ID]
DT[nitrate, list(total=.N), by=ID]
DT
DT[, list(total=.N), by=ID]
DT[nitrate, list(total=nitrate), by=ID]
DT[nitrate, list(total=.N), by=ID]
DT[!is.na(nitrate), list(total=.N), by=ID, nomatch=0]
DT[!is.na(nitrate), list(total=.N), by=ID]
DT[!is.na(nitrate), list(total=.N,ID), by=ID]
DT[!is.na(nitrate), list(total=.N,ID)]
DT[!is.na(nitrate), list(total=.N,ID), by=ID]
DT[, list(total=.N,ID), nomatch=0]
DT[, list(total=.N,ID), nomatch=NA]
DT[, list(total=.N,ID), by=ID, nomatch=NA]
DT[, list(total=.N,ID), by=ID, nomatch=0]
DT[, list(total=.N,ID), by=ID]
DT[, list(total=.N), by=ID]
DT[ID, list(total=.N), by=ID]
DT[ID, list(total=.N,.BY), by=ID]
DT[, list(total=.N,.BY), by=ID]
DT[, .I[which.max(nitrate)], by=ID]
DT[, .I[which.max(nitrate)]]
DT[, .I[]]
DT[, .I[], by=ID]
DT[, .I[.N], by=ID]
DT[nitrate > 0, .I[.N], by=ID]
DT[, complete.cases, by=ID]
DT[, complete.cases(DT), by=ID]
dt <- do.call("rbind",lapply(fileList,read.csv))
good <- completed.cases(dt)
good <- complete.cases(dt)
good
dt[good,]
dt[good,][1:4,]
nrows <- sapply( fileList, function(f) nrow(complete.cases(read.csv(f))))
nrows
fileList
nrow(nrows)
nrow(read.csv("specdata/291.csv"))
fileList
nrows <- sapply( fileList, function(f) nrow(read.csv(f)))
nrows
nrow(complete.cases(read.csv("specdata/291.csv")))
sum(complete.cases(read.csv("specdata/291.csv")))
sum(complete.cases(read.csv("specdata/290.csv")))
length(complete.cases(read.csv("specdata/290.csv")))
lenth(complete.cases(read.csv("specdata/291.csv")))
length(complete.cases(read.csv("specdata/291.csv")))
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
submit
submit()
complete("specdata", 1)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 1)
submit()
complete("specdata", 291:290)
complete("specdata", 1)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 1)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
complete("specdata", 30:25)
submit()
complete("specdata", 1:332)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 291:290)
complete("specdata", 291)
complete("specdata", 290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290)
complete("specdata", 290:291)
?data.frame
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290:291)
complete("specdata", 290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290)
complete("specdata", 290:291)
complete("specdata", 1:332)
submit()
complete("specdata", 332:1)
complete("specdata", 1)
complete("specdata", 290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290)
source('~/.active-rstudio-document', echo=TRUE)
complete("specdata", 290)
complete("specdata", 332:1)
submit()
complete("specdata", 290)
submit()
?cor
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
?read.csv
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
?data.table
source('~/.active-rstudio-document', echo=TRUE)
?data.table
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 150)
corr("specdata")
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata")
corr("specdata", 500)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 500)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 500)
?setkey
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 500)
?data.table
corr("specdata", 500)[V1 == TRUE]
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 500)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 500)
corr("specdata", 400)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 400)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 400)
cr <- corr("specdata", 150)
head(cr)
source('~/.active-rstudio-document', echo=TRUE)
cr <- corr("specdata", 150)
head(cr)
submit()
summary(cr)
source('~/.active-rstudio-document', echo=TRUE)
cr <- corr("specdata", 150)
summary(cr)
source('~/Google Drive/Coursera/R_Code/corr.R', echo=TRUE)
cr <- corr("specdata", 150)
summary(cr)
head(cr)
corr("specdata", 5000)
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 5000)
?length
source('~/.active-rstudio-document', echo=TRUE)
corr("specdata", 5000)
cr <- corr("specdata", 5000)
summary(cr)
class(cr)
test <- numeric[0]
testing <- numeric
testing
testing <- numeric[0]
testing <- numeric(0)
testing
source('~/.active-rstudio-document', echo=TRUE)
cr <- corr("specdata", 5000)
cr
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
submit()
submit()
submit()
submit()
submit()
source('~/.active-rstudio-document', echo=TRUE)
submit()
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[10]
nchare(htmlCode[c(10,20,30,100)])
nchar(htmlCode[c(10,20,30,100)])
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlCode = readLines(con)
openConnection(con)
con = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
htmlCode = readLines(con)
openConnection(con)
close(con)
head(htmlCode)
htmlCode[4]
htmlCode[,4]
class(htmlCode)
htmlCode
?read.table
quiz5 <- read.table(htmlCode[4:1271], header = TRUE, sep = "\t")
quiz5 <- read.table("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", header = TRUE, sep = "\t", skip=3)
quiz5
quiz5DT <- as.data.table(quiz5)
quiz5DT[,3]
quiz5DT[,SST.SSTA.....]
htmlCode
substr(htmlCode[1:1271], 33, 36)
sum(substr(htmlCode[1:1271], 33, 36))
sum(as.numeric(substr(htmlCode[1:1271], 33, 36))
)
trim.leading <- function (x)  sub("^\\s+", "", x)
sum(as.numeric(trim.leading(substr(htmlCode[1:1271], 33, 36)))
)
trim.leading(substr(htmlCode[1:1271], 33, 36))
trim.leading(substr(htmlCode[2:12], 33, 36))
trim.leading(substr(htmlCode[3:12], 33, 36))
trim.leading(substr(htmlCode[5:12], 33, 36))
trim.leading(substr(htmlCode[5:1271], 33, 36))
sum(as.numeric(substr(htmlCode[5:1271], 33, 36))
)
sum(as.numeric(substr(htmlCode[5:1271], 40, 44))
)
sum(as.numeric(substr(htmlCode[1:1], 40, 44)))
substr(htmlCode[1:12], 40, 44)
substr(htmlCode[1:12], 40, 45)
substr(htmlCode[1:12], 41, 45)
substr(htmlCode[1:12], 42, 45)
sum(as.numeric(substr(htmlCode[5:1271], 42, 45))
)
substr(htmlCode[1:12], 28, 31)
substr(htmlCode[1:12], 29, 31)
substr(htmlCode[1:12], 29, 32)
substr(htmlCode[5:12], 29, 32)
sum(as.numeric(substr(htmlCode[5:1271], 29, 32)))
sum(as.numeric(substr(htmlCode[5:1258], 29, 32)))
?read.fortran
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "84617f296b0321b8950f")
?oauth_app
myapp <- oauth_app("github", "84617f296b0321b8950f", "297b86dbaa982b300978f5b377d3536b82b03388")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
content(req)
class(req)
repos <- content(req)
repos
class(repos)
DTrepos <- as.data.table(repos)
DTrepos
getwd()
library(datasets)
data(iris)
?iris
iris
split(iris, iris$species)
split(iris, iris$Dpecies)
split(iris, iris$Species)
splitIris <- split(iris, iris$Species)
splitIris
lapply(splitIris, function(x) colMeans(x[,"Sepal.Length"]))
splitIris[,"Sepal.Length"]
splitIris[,Sepal.Length]
splitIris[,$Sepal.Length]
splitIris[,splitIris$Sepal.Length]
splitIris["Sepal.Length"]
splitIris["Sepal.Length",]
splitIris
class(splitIris)
lapply(splitIris, function(x) colMeans(x[,"Sepal.Length"]))
splitIris[,splitIris$Sepal.Length]
splitIris[,splitIris$Sepal.Length]
splitIris[,splitIris$Sepal.Length]
splitIris[,splitIris$virginica]
splitIris[,virginica]
splitIris
?list
splitIris[,]
splitIris[,2]
splitIris[,,]
splitIris[,,,,,]
lapply(splitIris, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
colMeans(iris)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
apply(mtcars, 2, mean)
?apply
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars
with(mtcars, tapply(mpg, cyl, mean))
?tapply
with(mtcars, tapply(mpg, hp, mean))
with(mtcars, tapply(hp, cyl, mean))
?abs
abs(82.63636) - abs(209.21429)
abs(209.21429)
abs(82.63636)
abs(82.63636 - 209.21429)
209.21429 - 82.63636
debug(ls)
ls
?ls
ls(iris)
''
exit
10
10
20
q
q
where
iris
setwd("~/git/getdata-003-prac")
if (!file.exists("X_merged.txt")) {
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/features.txt")
open(con, open="r")
headers = read.table(con)
close(con)
write.table(headers[,-1], "X_headers.txt", row.names=F, col.names=F)
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/test/X_test.txt")
open(con, open="r")
testData = readLines(con)
close(con)
write(testData, "X_merged.txt", sep="\t")
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/train/X_train.txt")
open(con, open="r")
testData = readLines(con)
close(con)
write(testData, "X_merged.txt", sep="\t", append=TRUE)
## Activity Data
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/activity_labels.txt")
open(con, open="r")
activities = readLines(con)
write(activities, "activities.txt", sep="\t")
close(con)
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/test/y_test.txt")
open(con, open="r")
testYData = readLines(con)
close(con)
write(testYData, "Y_merged.txt", sep="\t")
con <- unz(description="UCI HAR Dataset.zip", filename="UCI HAR Dataset/train/y_train.txt")
open(con, open="r")
testYData = readLines(con)
close(con)
write(testYData, "Y_merged.txt", sep="\t", append=TRUE)
}
headerLabels <- read.table("X_headers.txt")
cfeatures <- read.table("cleanedfeatures.txt", sep=",")
headerLabels <- merge(headerLabels, cfeatures, by="V1", all=T)
headerLabels[,2] <- as.character(headerLabels[,2])
headerLabels[with(headerLabels, is.na(headerLabels$V2)),]$V2 <- "Discard"
activityLabels <- read.table("activities.txt")
data <- read.table("X_merged.txt", col.names=as.vector(headerLabels[,2]))
dataY <- read.table("Y_merged.txt")
dataJ <- merge(dataY, activityLabels, by="V1")
data$Activity <- dataJ[2]$V2
data <- data[,c(which(!like(names(data), "*Discard*")))]
library(data.table)
data <- data[,c(which(!like(names(data), "*Discard*")))]
library(reshape2)
?melt
melt(data, id.vars="Activity")
names(melt(data, id.vars="Activity"))
names(melt(data, measure.vars="Activity"))
names(melt(data, measure.vars=c(names(data[1:64]))))
melt(data, measure.vars=c(names(data[1:64])))
data <- aggregate(. ~ Activity, data=data, FUN="mean")
data
t(data)
as.data.frame(t(data))
data
data <- as.data.frame(t(data))
data
dim(data)
colnames(data) <- data[1,]
names(data)
data[1,]
colnames(data) <- c(data[1,])
names(data)
colnames(data) <- list(data[1,])
names(data)
data
data <- read.table("X_merged.txt", col.names=as.vector(headerLabels[,2]))
dataY <- read.table("Y_merged.txt")
dataJ <- merge(dataY, activityLabels, by="V1")
data$Activity <- dataJ[2]$V2
library(data.table)
data <- data[,c(which(!like(names(data), "*Discard*")))]
data <- aggregate(. ~ Activity, data=data, FUN="mean")
data <- as.data.frame(t(data))
data
dt <- data
colnames(dt)
colnames(dt)[1:6]
dt[1,]
dt[1,][1:6]
colnames(dt) <- dt[1,]
colnames(dt)
dt <- data
colnames(dt) <- as.character(dt[1,])
colnames(dt)
dt <- data
str(dt)
dt[1,]
as.character(dt[1,])
dt[1,]$V1
dt
class(dt)
rownames(dt)
data <- read.table("X_merged.txt", col.names=as.vector(headerLabels[,2]))
dataY <- read.table("Y_merged.txt")
dataJ <- merge(dataY, activityLabels, by="V1")
data$Activity <- dataJ[2]$V2
library(data.table)
data <- data[,c(which(!like(names(data), "*Discard*")))]
data <- aggregate(. ~ Activity, data=data, FUN="mean")
data
cnames <- data$Activity
data <- as.data.frame(t(data[,-1]))
colnames(data) <- cnames
data$Subject <- row.names(data)
data
data[,c(7,1:6)]
data <- data[,c(7,1:6)]
write.csv(data, file="./tidy_data.csv", row.names=FALSE)
